.\" Generated with Ronnjs/v0.1
.\" http://github.com/kapouer/ronnjs/
.
.TH "JSON" "1" "October 2011" "" ""
.
.SH "NAME"
\fBjson\fR \-\- JSON love for your command line
.
.SH "SYNOPSIS"
\fB<something generating JSON on stdout> | json [OPTIONS] [LOOKUPS]\fR
.
.SH "DESCRIPTION"
Pipe in your JSON for nicer (pretty\-printed) output or supply one or more
lookups\fB to extract a subset of the JSON\. HTTP header blocks are skipped by
default (as from \fRcurl \-i`) by default\.
.
.P
See more complete documentation in the readme and changelog:
.
.IP "\(bu" 4
README: \fIhttps://github\.com/trentm/json#readme\fR
.
.IP "\(bu" 4
Change log: \fIhttps://github\.com/trentm/json/blob/master/CHANGES\.md\fR
.
.IP "" 0
.
.SH "OPTIONS"
If your JSON output is a REST API response, it might include the headers
(e\.g\. when calling with \fBcurl \-i\fR)\. By default \fBjson\fR will pass those headers
through (without choking on them)\. However if you want then stripped you
can use:
.
.P
\fB\-H\fR
  drop any HTTP header block (as from \fBcurl \-i \.\.\.\fR)
.
.P
By default \fBjson\fR outputs results in a "flat" format that is intended to be
of most use to the UNIX command\-line\. Currently the only difference between
flat and JSON output is that a simple string result is printed \fIwithout\fR JSON\'s
double\-quotes\. Other output formats are supported:
.
.P
\fB\-o, \-\-output MODE\fR
  Specify an output mode\. One of:
.
.IP "" 4
.
.nf
  jsony (default): JSON with string quotes elided
  json: JSON output, 2\-space indent
  json\-N: JSON output, N\-space indent, e\.g\. \'json\-4\'
  inspect: node\.js `util\.inspect` output
.
.fi
.
.IP "" 0
.
.P
\fB\-i\fR
  shortcut for \fB\-o inspect\fR
.
.P
\fB\-j\fR
  shortcut for \fB\-o json\fR
.
.P
You can process elements of an input array separately and generate tabular
output:
.
.P
\fB\-a, \-\-array\fR
  Process input as an array of separate inputs and output in tabular form\.
.
.P
\fB\-d DELIM\fR
  Delimiter string for tabular output (default is \' \')\.
.
.P
Miscellaneous options:
.
.P
\fB\-h, \-\-help\fR
  print this help info and exit
.
.P
\fB\-\-version\fR
  print version of this command and exit
.
.P
\fB\-q, \-\-quiet\fR
  don\'t warn if input isn\'t valid JSON
.
.SH "EXAMPLES"
A REST API:
.
.IP "" 4
.
.nf
$ curl \-s http://github\.com/api/v2/json/repos/show/joyent/node
{"repository":{"has_wiki":true,"forks":597,"language":"C++",\.\.\.}
.
.fi
.
.IP "" 0
.
.P
Nice output by default:
.
.IP "" 4
.
.nf
$ curl \-s http://github\.com/api/v2/json/repos/show/joyent/node | json
{
  "repository": {
    "has_wiki": true,
    "language": "C++",
    "homepage": "http://nodejs\.org/",
    "open_issues": 271,
    "fork": false,
    "has_issues": true,
    "url": "https://github\.com/joyent/node",
    "forks": 597,
    "created_at": "2009/05/27 09:29:46 \-0700",
    "pushed_at": "2011/03/18 15:19:24 \-0700",
    "size": 20984,
    "private": false,
    "has_downloads": false,
    "name": "node",
    "owner": "joyent",
    "organization": "joyent",
    "watchers": 5584,
    "description": "evented I/O for v8 javascript"
  }
}
.
.fi
.
.IP "" 0
.
.P
Say you just want to extract one value:
.
.IP "" 4
.
.nf
$ curl \-s https://github\.com/api/v2/json/repos/show/joyent/node \\
  | json repository\.open_issues
271
.
.fi
.
.IP "" 0
.
.P
More examples at \fIhttps://github\.com/trentm/json#readme\fR\|\.
.
.SH "BUGS"
\fBjson\fR is written in JavaScript and requires node\.js (\fBnode\fR)\. Report bugs
to \fIhttps://github\.com/trentm/json/issues\fR\|\.
.
.SH "COPYRIGHT"
json is Copyright (c) 2011 Trent Mick
.
.SH "SEE ALSO"
.
.IP "\(bu" 4
json:select: \fIhttp://jsonselect\.org/\fR
.
.IP "\(bu" 4
jsonpipe: \fIhttps://github\.com/dvxhouse/jsonpipe\fR
.
.IP "\(bu" 4
json\-command: \fIhttps://github\.com/zpoley/json\-command\fR
.
.IP "\(bu" 4
JSONPath: \fIhttp://goessner\.net/articles/JsonPath/\fR, \fIhttp://code\.google\.com/p/jsonpath/wiki/Javascript\fR
.
.IP "\(bu" 4
jsawk: \fIhttps://github\.com/micha/jsawk\fR
.
.IP "\(bu" 4
jshon: \fIhttp://kmkeen\.com/jshon/\fR
.
.IP "" 0

